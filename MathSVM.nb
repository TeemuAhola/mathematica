(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     92213,       2845]
NotebookOptionsPosition[     83298,       2542]
NotebookOutlinePosition[     83767,       2560]
CellTagsIndexPosition[     83724,       2557]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["MathSVM",
  FontSlant->"Italic"],
 " package"
}], "Title",
 InitializationCell->True],

Cell[TextData[{
 "This package provides support for support vector machines, quadratic \
programming, and various learning theory-related statistics. This package was \
developed and tested with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " v5.0.0.0"
}], "Text",
 InitializationCell->True],

Cell["\<\
You are welcome to freely use this software for academic and other \
non-commercial applications. For commercial use,  contact the author for \
licensing. This software is constantly being updated and maintained; for new \
versions, suggestions or feedback, contact the author.\
\>", "Text",
 InitializationCell->True],

Cell[TextData[{
 "Roland Nilsson 2004\n",
 StyleBox["rolle@ifm.liu.se",
  FontWeight->"Bold"]
}], "Text",
 InitializationCell->True],

Cell[TextData[StyleBox["Copyright (c) Roland Nilsson 2004. All rights \
reserved.",
 FontWeight->"Bold"]], "Text"],

Cell[CellGroupData[{

Cell["Package definition", "Section",
 InitializationCell->True],

Cell["Introduce global names and perform general setup.", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<MathSVM`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.7311645996928053`*^9, 3.731164822273621*^9}],

Cell[CellGroupData[{

Cell["Public symbols with usage strings", "Subsection",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SVMClassify", "::", "usage"}], "=", 
   "\"\<Classify[K,X,\[Alpha],y,x] predicts a response y for a new case x \
using the trained svm model {kernel K, data X,multipliers \[Alpha],labels y}.\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelMatrix", "::", "usage"}], "=", 
   "\"\<KernelMatrix[K,X] computes the (full) matrix with elements K[x\
\[LeftDoubleBracket]i\[RightDoubleBracket],x\[LeftDoubleBracket]j\
\[RightDoubleBracket]].\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IdentityKernel", "::", "usage"}], "=", 
   "\"\<IdentityKernel[x,y] is the function x.y.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RBFKernel", "::", "usage"}], "=", 
   "\"\<RBFKernel[x,y] is the function Exp[-\[Gamma](x-y).(x-y)].\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PolynomialKernel", "::", "usage"}], "=", 
   "\"\<PolynomialKernel[x,y,d], where d is an integer, is the function \
(x.y+1\!\(\*SuperscriptBox[\()\), \(d\)]\).\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeparableSVM", "::", "usage"}], "=", 
   "\"\<SeparableSVM[X,y,\[Tau]] trains a separable SVM on data X, labels y, \
and solution tolerance \[Tau] (see QPSolve). Returns the multiplier vector \
\[Alpha]. Option KernelFunction determines the kernel to use; default is \
IdentityKernel (i.e., no kernel).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NonseparableSVM", "::", "usage"}], "=", 
   "\"\<NonSeparableSVM[X,y,C,\[Tau]] trains an non-separable SVM on data X, \
labels y, penalty term C and solution tolerance \[Tau] (see QPSolve). Returns \
the multiplier vector \[Alpha]. Option KernelFunction determines the kernel \
to use; default is IdentityKernel (i.e., no kernel).\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegressionSVM", "::", "usage"}], "=", 
   "\"\<RegressionSVM[X,y,C,\[Epsilon],\[Tau]] trains a regression SVM with \
\[Epsilon]-insensitive loss function on regression variables X, response \
variable y, error tolerace C and solution tolerance \[Tau] (see QPSolve). \
Returns the multiplier vector \[Alpha]. Option KernelFunction determines the \
kernel to use; default is IdentityKernel (i.e., no kernel). Note that this \
creates a dual problem of size 2*(#samples).\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegressionBias", "::", "usage"}], "=", 
   "\"\<RegressionBias[\[Alpha],X] returns the bias term for regression \
problems (this differs form the classification formulations).\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegressionFunction", "::", "usage"}], "=", 
   "\"\<RegressionFunction[\[Alpha],X,x] returns the regression function f(x) \
defined by \[Alpha] and X. Option KernelFunction determines the kernel to \
use; default is IdentityKernel (i.e., no kernel).\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegressionSupportVectors", "::", "usage"}], "=", 
   "\"\<RegressionSupportVectors[\[Alpha]] returns the support vectors for a \
regression model defined by \[Alpha].\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SupportVectors", "::", "usage"}], "=", 
   "\"\<SupportVectors[\[Alpha],y] returns {I+,I-} where I+/- are the index \
vector for support vectors in class +/-.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WeightVector", "::", "usage"}], "=", 
   "\"\<WeightVector[\[Alpha],X,y] returns the weight (normal) vector for the \
separating plane. This is only well-defined when \[Alpha] is the result of an \
SVM trained with IdentityKernel.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bias", "::", "usage"}], "=", 
   "\"\<Bias[\[Alpha],X,y] gives the bias term for the trained svm model \
{kernel K, data X,multipliers \[Alpha],labels y}. Option KernelFunction \
determines the kernel to use; default is IdentityKernel (i.e., no \
kernel).\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelDistance", "::", "usage"}], "=", 
   "\"\<KernelDistance[x,y,K] gives the euclidean (\!\(\*SubscriptBox[\(L\), \
\(2\)]\)) distance between x and y in the feature space induces by the kernel \
K.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMPlot", "::", "usage"}], "=", 
   "\"\<SVMPlot[\[Alpha],X,y] produces a typical SVM-plot of the SVM solution \
\[Alpha], together with data points X (in \!\(\*SuperscriptBox[\(R\), \
\(2\)]\)!) and labels y. Option KernelFunction determines the kernel to use \
for drawing decision boundaries.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMDataPlot", "::", "usage"}], "=", 
   "\"\<SVMDataPlot[X,y] just plots the data points in X with classes {+1,-1} \
highlighted.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RegressionSVMPlot", "::", "usage"}], "=", 
   "\"\<RegressionSVMPlot[\[Alpha],X,y,\[Epsilon]] draws data points {X,y}, \
the regression function determined by {\[Alpha],X} and a 'corridor' of with \
\[Epsilon].\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QPSolve", "::", "usage"}], "=", 
   "\"\<QPSolve[Q,p,a,b,c,y,\[Tau]] solves the quadratic programming problem \
min \[Alpha].Q.\[Alpha]+p.\[Alpha], subject to a\[LessEqual]\[Alpha]\
\[LessEqual]b and y.\[Alpha]=c. QPSolve uses the GSMO algorithm described by \
Keerthi et al. \[Tau] is a solution tolerance parameter (0.01 or so is \
usually good enough for SVMs). Q must be a positive semidefinite matrix to \
guarantee convergence.\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7311648463740664`*^9, 3.731164847809637*^9}, {
  3.731407468221191*^9, 3.7314074688711967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public Options", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormulationOnly", "::", "usage"}], "=", 
   "\"\<This option causes SVM training functions to merely formulate the QP, \
without solving it.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KernelFunction", "::", "usage"}], "=", 
   "\"\<KernelFunction->K[x,y] is used in many SVM-related functions to \
define the kernel function.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DebugSolver", ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<MathSVM`Private`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kernel Functions", "Section",
 InitializationCell->True],

Cell[TextData[{
 "This function creates a ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"n", " ", "x", " ", "n"}]}], TraditionalForm]]],
 " matrix by applying the kernel function to all combinations of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", " ", "x", " ", "p"}], TraditionalForm]]],
 " matrix ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]]],
 ", i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"K", "(", 
      RowBox[{
       SubscriptBox["x", "i"], ",", 
       SubscriptBox["x", "j"]}], ")"}], "=", 
     RowBox[{
      RowBox[{"\[Phi]", "(", 
       SubscriptBox["x", "i"], ")"}], ".", 
      RowBox[{"\[Phi]", "(", 
       SubscriptBox["x", "j"], ")"}]}]}], "]"}], TraditionalForm]]]
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"KernelMatrix", "[", 
   RowBox[{"K_", ",", "X_"}], "]"}], ":=", 
  RowBox[{"Outer", "[", 
   RowBox[{"K", ",", "X", ",", "X", ",", "1"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Identity kernel", "Subsection",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IdentityKernel", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"x", ".", "y"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"x", ".", "y"}]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.731407486493052*^9, 3.7314074874301577`*^9}, 
   3.7332357050764647`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RBF Kernel", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Note that this kernel depends only on the distance ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", 
     RowBox[{"x", ",", "y"}], ")"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}]}]}], TraditionalForm]]],
 ".\nOne could consider RBF kernels using an inner kernel function, so that \
it depends on the distance in some other \[Phi]-space ..."
}], "Text",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RBFKernel", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Gamma]_"}], "]"}], "=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "\[Gamma]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"x", "-", "y"}], ")"}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "\[Gamma]"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"x", "-", "y"}], ")"}]}]}]]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.731407486621612*^9, 3.731407487461822*^9}, 
   3.733235705116618*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Kernel", "Subsection",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PolynomialKernel", "[", 
   RowBox[{"x_", ",", "y_", ",", "d_Integer"}], "]"}], "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", ".", "y"}], "+", "1"}], ")"}], "d"]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"x", ".", "y"}]}], ")"}], "d"]], "Output",
 InitializationCell->True,
 CellChangeTimes->{{3.73140748665489*^9, 3.731407487491207*^9}, 
   3.7332357051527157`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SVM Formulations", "Section",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Decision function for classification", "Subsection",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVMClassify", "[", 
   RowBox[{
   "K_", ",", "X_", ",", "\[Alpha]_", ",", "y_", ",", "b_", ",", "x_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Sign", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"y", "*", "\[Alpha]", "*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", "X"}], "]"}]}], "]"}], 
    "+", "b"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVMClassify", "[", 
   RowBox[{"K_", ",", "X_", ",", "\[Alpha]_", ",", "y_", ",", "x_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Sign", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"y", "*", "\[Alpha]", "*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}], ",", "X"}], "]"}]}], "]"}], 
    "+", 
    RowBox[{"Bias", "[", 
     RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", 
      RowBox[{"KernelFunction", "\[Rule]", "K"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.73323569767535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Separable SVM", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Solves the problem\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{"min", " ", "||", 
    RowBox[{"w", ".", "w"}], "||", 
    RowBox[{"/", "2"}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"s", ".", "t", ".", " ", 
     RowBox[{
      SubscriptBox["y", "i"], "(", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "(", 
         SubscriptBox["x", "i"], ")"}], ".", "w"}], "+", "b"}], ")"}]}], 
    "\[GreaterEqual]", "1"}], TraditionalForm]}]],
 "\nwhere ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]]],
 " is the kernel function. Returns the multipliers \[Alpha] for the dual \
problem."
}], "Text",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "SeparableSVM", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
    RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], 
   "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731407486710956*^9, 3.731407487536734*^9}, 
   3.733235705223598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeparableSVM", "[", 
   RowBox[{"X_", ",", "y_", ",", "\[Tau]_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "qp", ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "SeparableSVM", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qp", "=", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"KernelMatrix", "[", 
          RowBox[{"K", ",", "X"}], "]"}], "*", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "y", ",", "y"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{"\[Infinity]", ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "0", 
        ",", "\[IndentingNewLine]", "y", ",", "\[IndentingNewLine]", 
        "\[Tau]"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulationOnly", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "SeparableSVM", "]"}]}], ",", 
       "\[IndentingNewLine]", "qp", ",", "\[IndentingNewLine]", 
       RowBox[{"Apply", "[", 
        RowBox[{"QPSolve", ",", "qp"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-separable case", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Solves the problem\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["min", 
     RowBox[{"w", ",", "\[Xi]"}]], " ", 
    RowBox[{"||", 
     RowBox[{"w", ".", "w"}], "||", 
     RowBox[{
      RowBox[{"/", "2"}], "+", 
      RowBox[{"C", 
       RowBox[{
        SubscriptBox["\[Sum]", "i"], 
        SubscriptBox["\[Xi]", "i"]}]}]}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"s", ".", "t", ".", " ", 
      RowBox[{
       SubscriptBox["y", "i"], "(", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "(", 
          SubscriptBox["x", "i"], ")"}], ".", "w"}], "+", "b"}], ")"}]}], 
     "\[GreaterEqual]", 
     RowBox[{"1", "-", 
      SubscriptBox["\[Xi]", "i"]}]}], ",", 
    RowBox[{
     SubscriptBox["\[Xi]", "i"], "\[GreaterEqual]", "0"}]}], 
   TraditionalForm]}]],
 "\nwhere ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]]],
 " is the kernel function. Returns the multipliers \[Alpha] for the dual \
problem."
}], "Text",
 InitializationCell->True],

Cell[TextData[{
 "In this case some data points (with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], ">", "0"}], TraditionalForm]]],
 ") will violate the hard boundary ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], "(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "(", 
        SubscriptBox["x", "i"], ")"}], ".", "w"}], "+", "b"}], ")"}], "=", 
    "1"}], TraditionalForm]]],
 ". The penalty for violation is determined by C. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "NonseparableSVM", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
    RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], 
   "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731407486751648*^9, 3.731407487567875*^9}, 
   3.733235705275613*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NonseparableSVM", "[", 
   RowBox[{"X_", ",", "y_", ",", "C_", ",", "\[Tau]_", ",", "opts___"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "qp", ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "NonseparableSVM", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qp", "=", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"KernelMatrix", "[", 
          RowBox[{"K", ",", "X"}], "]"}], "*", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "y", ",", "y"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{"C", ",", 
          RowBox[{"{", "l", "}"}]}], "]"}], ",", "\[IndentingNewLine]", "0", 
        ",", "\[IndentingNewLine]", "y", ",", "\[IndentingNewLine]", 
        "\[Tau]"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulationOnly", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "NonseparableSVM", "]"}]}], ",", 
       "\[IndentingNewLine]", "qp", ",", "\[IndentingNewLine]", 
       RowBox[{"Apply", "[", 
        RowBox[{"QPSolve", ",", "qp"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regression SVM", "Subsection"],

Cell["Solves the problem", "Text",
 InitializationCell->True],

Cell[TextData[{
 "min ",
 Cell[BoxData[
  FormBox[
   RowBox[{"||", 
    RowBox[{"w", ".", "w"}], "||", 
    RowBox[{
     RowBox[{"/", "2"}], "+", 
     RowBox[{"C", 
      RowBox[{
       SubscriptBox["\[Sum]", "i"], 
       SubscriptBox["\[Xi]", "i"]}]}], "+", 
     RowBox[{"C", 
      RowBox[{
       SubscriptBox["\[Sum]", "i"], 
       SuperscriptBox[
        SubscriptBox["\[Xi]", "i"], "*"]}]}]}]}], TraditionalForm]]],
 "\ns.t.  ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["w", "T"], 
      RowBox[{"\[Phi]", "(", 
       SubscriptBox["x", "i"], ")"}]}], "+", "b", "-", 
     SubscriptBox["z", "i"]}], "\[LessEqual]", 
    RowBox[{"\[Epsilon]", "+", 
     SubscriptBox["\[Xi]", "i"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["z", "i"], "-", 
     RowBox[{
      SuperscriptBox["w", "T"], 
      RowBox[{"\[Phi]", "(", 
       SubscriptBox["x", "i"], ")"}]}], "-", "b"}], "\[LessEqual]", 
    RowBox[{"\[Epsilon]", "+", 
     SuperscriptBox[
      SubscriptBox["\[Xi]", "i"], "*"]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["\[Xi]", "i"], ",", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Xi]", "i"], "*"], "\[GreaterEqual]", "0"}]}], 
   TraditionalForm]}]]
}], "Text",
 InitializationCell->True],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "i"], TraditionalForm]]],
 " are the response variables (instead of labels ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]]],
 " in classification!), \[Epsilon] is the loss function insensitivity, and C \
is an error tolerance parameter as in the C-SVM formulation. The dual form is \
described in LIBSVM eqn. (3.2)"
}], "Text",
 InitializationCell->True],

Cell["\<\
There are two forms for each of these functions; the second is just a \
convenience stub for doing the 1D regression case with a vector for X.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "RegressionSVM", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
    RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], 
   "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FormulationOnly", "\[Rule]", "False"}], ",", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731407486786776*^9, 3.7314074875980253`*^9}, 
   3.733235705320113*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionSVM", "[", 
   RowBox[{
   "X_", ",", "z_", ",", "C_", ",", "\[Epsilon]_", ",", "\[Tau]_", ",", 
    "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", "Q", ",", "\[Alpha]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "X", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "RegressionSVM", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"qp", "=", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"KernelMatrix", "[", 
         RowBox[{"K", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"X", ",", 
            RowBox[{"-", "X"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"\[Epsilon]", ",", 
           RowBox[{"{", 
            RowBox[{"2", "l"}], "}"}]}], "]"}], "+", 
         RowBox[{"Join", "[", 
          RowBox[{"z", ",", 
           RowBox[{"-", "z"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"2", "l"}], "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"C", ",", 
           RowBox[{"{", 
            RowBox[{"2", "l"}], "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "0", ",", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", "l", "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"{", "l", "}"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[Tau]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FormulationOnly", "/.", 
         RowBox[{"{", "opts", "}"}]}], "/.", 
        RowBox[{"Options", "[", "RegressionSVM", "]"}]}], ",", 
       "\[IndentingNewLine]", "qp", ",", "\[IndentingNewLine]", 
       RowBox[{"Apply", "[", 
        RowBox[{"QPSolve", ",", "qp"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionSVM", "[", 
   RowBox[{
    RowBox[{"X_", "?", "VectorQ"}], ",", "z_", ",", "C_", ",", "\[Epsilon]_", 
    ",", "\[Tau]_", ",", "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"RegressionSVM", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"X", ",", "1"}], "]"}], ",", "z", ",", "C", ",", "\[Epsilon]", 
    ",", "\[Tau]", ",", "opts"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Note that the bias definition is slightly different and depends on the \
\[Epsilon] term.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionBias", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "MatrixQ"}], ",", "z_", ",", "\[Epsilon]_", ",", 
    "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ",", "K"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "RegressionSVM", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sv", "=", 
      RowBox[{
       RowBox[{"SupportVectors", "[", "\[Alpha]", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]", "+", 
      RowBox[{"z", "\[LeftDoubleBracket]", "sv", "\[RightDoubleBracket]"}], 
      "-", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "l"}], "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "\[Alpha]", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], ")"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{
           "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "X", "\[LeftDoubleBracket]", "sv", "\[RightDoubleBracket]"}]}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "l"}], "}"}]}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionBias", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "VectorQ"}], ",", "z_", ",", "\[Epsilon]_", ",", 
    "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"RegressionBias", "[", 
   RowBox[{"\[Alpha]", ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"X", ",", "1"}], "]"}], ",", "z", ",", "\[Epsilon]", ",", 
    "opts"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionFunction", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "MatrixQ"}], ",", "z_", ",", "\[Epsilon]_", ",", 
    RowBox[{"x_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "X", "]"}]}], ",", "K", ",", "b"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"b", "=", 
      RowBox[{"RegressionBias", "[", 
       RowBox[{
       "\[Alpha]", ",", "X", ",", "z", ",", "\[Epsilon]", ",", "opts"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "RegressionSVM", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "l"}], "\[RightDoubleBracket]"}], "-", 
           RowBox[{
           "\[Alpha]", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], ")"}], 
         RowBox[{"K", "[", 
          RowBox[{
           RowBox[{
           "X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
           "x"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "l"}], "}"}]}], "]"}], "+", "b"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionFunction", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "VectorQ"}], ",", "z_", ",", "\[Epsilon]_", ",", "x_", 
    ",", "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"RegressionFunction", "[", 
   RowBox[{"\[Alpha]", ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"X", ",", "1"}], "]"}], ",", "z", ",", "\[Epsilon]", ",", 
    RowBox[{"{", "x", "}"}], ",", "opts"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Regression support vectors depend on \[Alpha] in a different way than \
classification SVMs (since \[Alpha] has length ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "l"}], TraditionalForm]]],
 ")"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionSupportVectors", "[", "\[Alpha]_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", "=", 
      RowBox[{
       RowBox[{"Length", "[", "\[Alpha]", "]"}], "/", "2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SupportVectors", "[", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "l", "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"{", "l", "}"}]}], "]"}]}], "]"}]}], "]"}], "-", 
     RowBox[{"{", 
      RowBox[{"0", ",", "l"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution properties", "Section"],

Cell[CellGroupData[{

Cell["Support Vectors, weight vector and bias", "Subsection",
 InitializationCell->True],

Cell["\<\
This returns the indices of support vectors partitioned into positive and \
negative\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SupportVectors", "[", 
   RowBox[{"\[Alpha]_List", ",", "y_List"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "*", "y"}], ",", 
       RowBox[{"_", "?", "Positive"}]}], "]"}], "//", "Flatten"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "*", "y"}], ",", 
       RowBox[{"_", "?", "Negative"}]}], "]"}], "//", "Flatten"}]}], 
   "}"}]}]], "Input",
 InitializationCell->True],

Cell["This just returns indices for all supportvectors", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SupportVectors", "[", "\[Alpha]_List", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"\[Alpha]", ",", 
     RowBox[{"a_", "/;", 
      RowBox[{"a", "\[NotEqual]", "0"}]}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["The weight vector is meaningful for IdentityKernels only.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WeightVector", "[", 
   RowBox[{"\[Alpha]_List", ",", 
    RowBox[{"X_", "?", "MatrixQ"}], ",", "y_List"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
     RowBox[{
     "\[Alpha]", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
     RowBox[{"X", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "X", "]"}]}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Bias, however, is always well-defined (given some constraints on the kernel)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "Bias", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]], "Output",
 CellChangeTimes->{{3.7314074869072237`*^9, 3.7314074877078867`*^9}, 
   3.7332357054335546`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bias", "[", 
   RowBox[{"\[Alpha]_", ",", "X_", ",", "y_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sv", ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "Bias", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sv", "=", 
      RowBox[{"SupportVectors", "[", 
       RowBox[{"\[Alpha]", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"\[Alpha]", "*", "y", "*", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", 
               RowBox[{
                RowBox[{"X", "\[LeftDoubleBracket]", 
                 RowBox[{"sv", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                 "\[RightDoubleBracket]"}], ",", "#"}], "]"}], "&"}], ",", 
             "X"}], "]"}]}], "]"}], "+", 
         RowBox[{"Total", "[", 
          RowBox[{"\[Alpha]", "*", "y", "*", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"K", "[", 
               RowBox[{
                RowBox[{"X", "\[LeftDoubleBracket]", 
                 RowBox[{"sv", "\[LeftDoubleBracket]", 
                  RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
                 "\[RightDoubleBracket]"}], ",", "#"}], "]"}], "&"}], ",", 
             "X"}], "]"}]}], "]"}]}], ")"}]}], "/", "2"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Various statistics", "Subsection",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Since", 
   FormBox[
    RowBox[{
     RowBox[{
      RowBox[{"K", "(", 
       RowBox[{
        SubscriptBox["x", "i"], ",", 
        SubscriptBox["x", "j"]}], ")"}], "=", 
      RowBox[{
       RowBox[{"\[Phi]", "(", 
        SubscriptBox["x", "i"], ")"}], ".", 
       RowBox[{"\[Phi]", "(", 
        SubscriptBox["x", "j"], ")"}]}]}], ","}],
    TraditionalForm], "we", " ", "can", " ", "define", " ", "the", " ", 
   "distance", " ", "metric", " ", "in", " ", "\[Phi]"}], "-", 
  RowBox[{"space", " ", "using", 
   FormBox["K",
    TraditionalForm]}]}], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["d", "2"], "(", 
    RowBox[{"x", ",", "y"}], ")"}], "=", 
   RowBox[{
    RowBox[{"||", 
     RowBox[{
      RowBox[{"\[Phi]", "(", "x", ")"}], "-", 
      RowBox[{"\[Phi]", "(", "y", ")"}]}], 
     SuperscriptBox["||", "2"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Phi]", "(", "x", ")"}], "-", 
        RowBox[{"\[Phi]", "(", "y", ")"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Phi]", "(", "x", ")"}], "-", 
        RowBox[{"\[Phi]", "(", "y", ")"}]}], ")"}]}], "=", 
     "\[IndentingNewLine]", 
     RowBox[{"=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "(", "x", ")"}], ".", 
         RowBox[{"\[Phi]", "(", "x", ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Phi]", "(", "y", ")"}], ".", 
         RowBox[{"\[Phi]", "(", "y", ")"}]}], "-", 
        RowBox[{"2", 
         RowBox[{"\[Phi]", "(", "x", ")"}], 
         RowBox[{"\[Phi]", "(", "y", ")"}]}]}], "=", 
       RowBox[{
        RowBox[{"K", "(", 
         RowBox[{"x", ",", "x"}], ")"}], "+", 
        RowBox[{"K", "(", 
         RowBox[{"y", ",", "y"}], ")"}], "-", 
        RowBox[{"2", 
         RowBox[{"K", "(", 
          RowBox[{"x", ",", "y"}], ")"}]}]}]}]}]}]}]}],
  TraditionalForm]}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"KernelDistance", "[", 
   RowBox[{"x_", ",", "y_", ",", "K_"}], "]"}], ":=", 
  SqrtBox[
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"x", ",", "x"}], "]"}], "+", 
    RowBox[{"K", "[", 
     RowBox[{"y", ",", "y"}], "]"}], "-", 
    RowBox[{"2", 
     RowBox[{"K", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}]]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SVM solution plots", "Section",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["For classification", "Subsection"],

Cell[TextData[{
 "These are only good for ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    StyleBox["R",
     FontWeight->"Bold"], "2"], TraditionalForm]]],
 " of course. Use PCA or something to visualize higher dimensions.\nUses \
ImplicitPlot[] to plot the decision boundary ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FormBox[
       SubscriptBox["\[Sum]", "i"],
       TraditionalForm], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"], 
       RowBox[{"K", "(", 
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"i", ","}]], "x"}], ")"}]}]}], "+", "b"}], "=", "0"}], 
   TraditionalForm]]],
 " and the two boundaries connecting support vectors, defined by\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FormBox[
       SubscriptBox["\[Sum]", "i"],
       TraditionalForm], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"], 
       RowBox[{"K", "(", 
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"i", ","}]], "x"}], ")"}]}]}], "+", "b"}], "=", 
    RowBox[{"+", "1"}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FormBox[
       SubscriptBox["\[Sum]", "i"],
       TraditionalForm], 
      RowBox[{
       SubscriptBox["\[Alpha]", "i"], 
       SubscriptBox["y", "i"], 
       RowBox[{"K", "(", 
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"i", ","}]], "x"}], ")"}]}]}], "+", "b"}], "=", 
    RowBox[{"-", "1"}]}], TraditionalForm]}]],
 "\nClass +1 is shown as black dots, -1 as grey dots. SVs are highlighted \
blue. This hold also for nonseparable C-SVM (violating points are also \
considered support vectors)"
}], "Text",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "SVMPlot", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]], "Output",
 CellChangeTimes->{{3.731407486954788*^9, 3.731407487746373*^9}, 
   3.733235705484273*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVMPlot", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "MatrixQ"}], ",", "y_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x1range", ",", "x2range", ",", "sv", ",", "df", ",", "x1", ",", "x2", 
      ",", "K"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "SVMPlot", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x1range", "=", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"Min", "[", 
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x2range", "=", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"Min", "[", 
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}], ",", 
        RowBox[{"Max", "[", 
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sv", "=", 
      RowBox[{"SupportVectors", "[", 
       RowBox[{"\[Alpha]", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"df", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"\[Alpha]", "*", "y", "*", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"K", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x1", ",", "x2"}], "}"}], ",", "#"}], "]"}], "&"}], 
           ",", "X"}], "]"}]}], "]"}], "+", 
       RowBox[{"Bias", "[", 
        RowBox[{"\[Alpha]", ",", "X", ",", "y", ",", "opts"}], "]"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"X", "\[LeftDoubleBracket]", 
          RowBox[{"Flatten", "[", "sv", "]"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "0.6", "]"}], ",", 
            RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}]}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"Extract", "[", 
         RowBox[{"X", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"y", ",", "1"}], "]"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Extract", "[", 
          RowBox[{"X", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"y", ",", 
             RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"GrayLevel", "[", "0.6", "]"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ContourPlot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"df", "\[Equal]", "0"}], ",", 
           RowBox[{"df", "\[Equal]", "1"}], ",", 
           RowBox[{"df", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], "}"}], ",", 
         RowBox[{"Evaluate", "[", "x1range", "]"}], ",", 
         RowBox[{"Evaluate", "[", "x2range", "]"}], ",", 
         RowBox[{"ContourStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"Dashing", "[", 
             RowBox[{"{", 
              RowBox[{".01", ",", ".01"}], "}"}], "]"}], ",", 
            RowBox[{"Dashing", "[", 
             RowBox[{"{", 
              RowBox[{".01", ",", ".01"}], "}"}], "]"}]}], "}"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"RemainingOptions", "[", 
        RowBox[{
         RowBox[{"{", "KernelFunction", "}"}], ",", "opts"}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7314076714260597`*^9, 3.731407686486064*^9}, {
   3.731407949902811*^9, 3.731407951306128*^9}, {3.731408699740878*^9, 
   3.731408738155685*^9}, {3.7314088546120663`*^9, 3.731408921308037*^9}, {
   3.731409107351396*^9, 3.731409157185989*^9}, {3.731409219097899*^9, 
   3.731409251998043*^9}, {3.731409309055462*^9, 3.731409357143983*^9}, 
   3.731409387681389*^9, 3.7314101404160013`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SVMDataPlot", "[", 
   RowBox[{
    RowBox[{"X_", "?", "MatrixQ"}], ",", "y_", ",", "opts___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{"Extract", "[", 
      RowBox[{"X", ",", 
       RowBox[{"Position", "[", 
        RowBox[{"y", ",", "1"}], "]"}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Extract", "[", 
       RowBox[{"X", ",", 
        RowBox[{"Position", "[", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"GrayLevel", "[", "0.6", "]"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "opts"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.731407851397304*^9, 3.731407852073073*^9}, 
   3.73141010643598*^9, 3.731410275851091*^9, {3.731410395070738*^9, 
   3.73141039627302*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["For regression", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "RegressionSVMPlot", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"KernelFunction", "\[Rule]", "IdentityKernel"}], "}"}]], "Output",
 CellChangeTimes->{{3.7314074869996967`*^9, 3.7314074877905073`*^9}, 
   3.7332357055346737`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RegressionSVMPlot", "[", 
   RowBox[{"\[Alpha]_", ",", 
    RowBox[{"X_", "?", "VectorQ"}], ",", "z_", ",", "\[Epsilon]_", ",", 
    "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"K", ",", "rf", ",", "sv"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"K", "=", 
      RowBox[{
       RowBox[{"KernelFunction", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "RegressionSVMPlot", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rf", "=", 
      RowBox[{"RegressionFunction", "[", 
       RowBox[{
       "\[Alpha]", ",", "X", ",", "z", ",", "\[Epsilon]", ",", "x", ",", 
        "opts"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sv", "=", 
      RowBox[{"RegressionSupportVectors", "[", "\[Alpha]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{"rf", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "X", "]"}], ",", 
           RowBox[{"Max", "[", "X", "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"rf", "+", "\[Epsilon]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "X", "]"}], ",", 
           RowBox[{"Max", "[", "X", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{".01", ",", ".01"}], "}"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"rf", "-", "\[Epsilon]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"Min", "[", "X", "]"}], ",", 
           RowBox[{"Max", "[", "X", "]"}]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{".01", ",", ".01"}], "}"}], "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"X", "\[LeftDoubleBracket]", 
             RowBox[{"Flatten", "[", "sv", "]"}], "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{"z", "\[LeftDoubleBracket]", 
             RowBox[{"Flatten", "[", "sv", "]"}], "\[RightDoubleBracket]"}]}],
            "}"}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Hue", "[", "0.6", "]"}], ",", 
            RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}]}]}], "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"X", ",", "z"}], "}"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.731407847299955*^9, 3.731407848098803*^9}, {
  3.731410385192227*^9, 3.731410387095601*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QP Solver", "Section",
 InitializationCell->True],

Cell["As described in Keerthi & Gilbert (Machine Learning journal)", "Text"],

Cell[TextData[{
 "The generalized SMO algorithm solves the QP\nmin ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "\[Alpha]", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Alpha]", "T"], "Q", " ", 
      RowBox[{"\[Alpha]", "/", "2"}]}], "+", 
     RowBox[{
      SuperscriptBox["p", "T"], "\[Alpha]"}]}]}], TraditionalForm]]],
 "\ns.t.  ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["a", "i"], "\[LessEqual]", 
    SubscriptBox["\[Alpha]", "i"], "\[LessEqual]", 
    SubscriptBox["b", "i"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sum]", "i"], 
     RowBox[{
      SubscriptBox["y", "i"], 
      SubscriptBox["\[Alpha]", "i"]}]}], "=", "c"}], TraditionalForm]}]],
 "\n\[Tau] is the tolerance for solution correctness.",
 StyleBox[" Q must be positive semi-definite, but not necessarily symmetric",
  FontWeight->"Bold"],
 ".\nWe also require ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[NotEqual]", "0."}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "i"], "=", 
    RowBox[{"-", "\[Infinity]"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["b", "i"], "=", "\[Infinity]"}], TraditionalForm]]],
 " is allowed. For infeasible problems, null is returned."
}], "Text"],

Cell[TextData[{
 "We use full kernel matrices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", " ", "x", " ", "n"}], ")"}], TraditionalForm]]],
 " in this implementation. This is usually ok with gene expression data where \
we have few samples. For large ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "-problems, you have to rewrite some stuff to compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"K", "(", 
    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]],
 " on the fly, preferably with a cache..."
}], "Text"],

Cell[CellGroupData[{

Cell["Main solver function", "Subsection",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "QPSolve", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"DebugSolver", "\[Rule]", "False"}], "}"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"DebugSolver", "\[Rule]", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.731407487044998*^9, 3.7314074878355618`*^9}, 
   3.733235705566289*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"QPSolve", "[", 
   RowBox[{
   "Q_", ",", "p_", ",", "a_", ",", "b_", ",", "c_", ",", "y_", ",", 
    "\[Tau]_", ",", "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Alpha]", ",", "l", ",", "Isets", ",", "Iup", ",", "Ilow", ",", "F", 
      ",", "B", ",", "oldB", ",", "M", ",", "k", ",", "debug"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"debug", "=", 
      RowBox[{
       RowBox[{"DebugSolver", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "QPSolve", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"l", "=", 
      RowBox[{"Length", "[", "Q", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"FeasiblePoint", "[", 
       RowBox[{"a", ",", "b", ",", "y", ",", "c"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Alpha]", "\[Equal]", "Null"}], ",", 
       RowBox[{"Return", "[", "Null", "]"}]}], "]"}], ";", 
     RowBox[{"k", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Isets", "=", 
         RowBox[{"GetIndexSets", "[", 
          RowBox[{"\[Alpha]", ",", "a", ",", "b", ",", "y"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Iup", "=", 
         RowBox[{"UpperBoundarySet", "[", "Isets", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Ilow", "=", 
         RowBox[{"LowerBoundarySet", "[", "Isets", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"F", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Q", ".", "\[Alpha]"}], "+", "p"}], ")"}], "/", "y"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"QPOptimalQ", "[", 
           RowBox[{"Iup", ",", "Ilow", ",", "F", ",", "\[Tau]"}], "]"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"B", "=", 
         RowBox[{"GetViolatingPair", "[", 
          RowBox[{
           RowBox[{
           "Isets", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", "Iup", ",", "Ilow", ",", "F", ",", "\[Tau]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"B", "\[Equal]", "Null"}], ",", 
          RowBox[{"Return", "[", "\"\<Error: no violating pair\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"B", "\[Equal]", "oldB"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Error: stuck on violating pair \>\"", ",", "B"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Subproblem = \>\"", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Q", "\[LeftDoubleBracket]", 
                RowBox[{"B", ",", "B"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{
                "p", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
                "+", 
                RowBox[{
                 RowBox[{"Q", "\[LeftDoubleBracket]", 
                  RowBox[{"B", ",", "M"}], "\[RightDoubleBracket]"}], ".", 
                 RowBox[{
                 "\[Alpha]", "\[LeftDoubleBracket]", "M", 
                  "\[RightDoubleBracket]"}]}]}], ",", 
               RowBox[{
               "a", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{
               "b", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{
               "y", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{
               "\[Alpha]", "\[LeftDoubleBracket]", "B", 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{
                RowBox[{
                "y", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
                ".", 
                RowBox[{
                "\[Alpha]", "\[LeftDoubleBracket]", "B", 
                 "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<F = \>\"", ",", 
             RowBox[{
             "F", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}]}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Isets = \>\"", ",", " ", "Isets"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "\[Alpha]", "]"}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"M", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"1", ",", "l"}], "]"}], ",", "B"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"debug", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<--------------NEW PAIR:------------\>\"", "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<viol. pair = \>\"", ",", "B"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<\[Alpha] = \>\"", ",", 
             RowBox[{
             "\[Alpha]", "\[LeftDoubleBracket]", "B", 
              "\[RightDoubleBracket]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<grad = \>\"", ",", 
             RowBox[{
             "F", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}]}], 
            "]"}], ";", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<current tau = \>\"", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"F", "\[LeftDoubleBracket]", 
                RowBox[{
                "B", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{"F", "\[LeftDoubleBracket]", 
                RowBox[{
                "B", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "\[Alpha]", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"QPSolve", "[", 
          RowBox[{
           RowBox[{"Q", "\[LeftDoubleBracket]", 
            RowBox[{"B", ",", "B"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{
            "p", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{"Q", "\[LeftDoubleBracket]", 
              RowBox[{"B", ",", "M"}], "\[RightDoubleBracket]"}], ".", 
             RowBox[{
             "\[Alpha]", "\[LeftDoubleBracket]", "M", 
              "\[RightDoubleBracket]"}]}]}], ",", 
           RowBox[{
           "a", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "b", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "y", "\[LeftDoubleBracket]", "B", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "\[Alpha]", "\[LeftDoubleBracket]", "B", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"debug", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<--------------NEW SOLUTION:------------\>\"", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<\[Alpha] = \>\"", ",", 
             RowBox[{
             "\[Alpha]", "\[LeftDoubleBracket]", "B", 
              "\[RightDoubleBracket]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldB", "=", "B"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[Alpha]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Feasible starting point", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Searches for feasible point on the boundary of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["a", "i"], ",", 
      SubscriptBox["b", "i"]}], "]"}], "l"], TraditionalForm]]],
 "in a step-wise fashion.\nReturns Null if no feasible point exists."
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"FeasiblePoint", "[", 
   RowBox[{"a_", ",", "b_", ",", "y_", ",", "c_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "y", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "l", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "\[Alpha]", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"c", "-", 
            RowBox[{
             RowBox[{"Drop", "[", 
              RowBox[{"y", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}], ".", 
             RowBox[{"Drop", "[", 
              RowBox[{"\[Alpha]", ",", 
               RowBox[{"{", "i", "}"}]}], "]"}]}]}], ")"}], "/", 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "\[Alpha]", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{
             "\[Alpha]", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "a", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{
           "b", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"y", ".", "\[Alpha]"}], "\[Equal]", "c"}], ",", "Break"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "l"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"y", ".", "\[Alpha]"}], "\[Equal]", "c"}], ",", "\[Alpha]", 
       ",", "Null"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytical case", "Subsection",
 InitializationCell->True],

Cell["\<\
2-dimensional case is solved analytically. 
Q may be singular; if so, we will always hit the boundary of the feasible \
region.\
\>", "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"QPSolve", "[", 
   RowBox[{
    RowBox[{"Q_", "/;", 
     RowBox[{
      RowBox[{"Length", "[", "Q", "]"}], "\[Equal]", "2"}]}], ",", "p_", ",", 
    "a_", ",", "b_", ",", "y_", ",", "\[Alpha]_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", "\[Alpha]new", ",", "c", ",", "tn", ",", "td"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"\[Alpha]", ".", "y"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tn", "=", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "Q", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".",
              "\[Alpha]"}], "+", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}], "/", 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "Q", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ".",
              "\[Alpha]"}], "+", 
            RowBox[{
            "p", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}], "/", 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"td", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Q", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "/", 
        SuperscriptBox[
         RowBox[{"y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "2"]}], "+", 
       RowBox[{
        RowBox[{"Q", "\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "/", 
        SuperscriptBox[
         RowBox[{"y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Q", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], "+", 
          RowBox[{"Q", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"td", "\[NotEqual]", "0"}], ",", 
        RowBox[{"tn", "/", "td"}], ",", 
        RowBox[{
         RowBox[{"Sign", "[", "tn", "]"}], "*", "\[Infinity]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]new", "=", 
      RowBox[{"\[Alpha]", "+", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "/", 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         RowBox[{
          RowBox[{"-", "t"}], "/", 
          RowBox[{
          "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\[Alpha]new", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "<", 
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"\[Alpha]new", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", 
             RowBox[{
              RowBox[{
              "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              RowBox[{
              "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
             ")"}], "/", 
           RowBox[{
           "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\[Alpha]new", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         ">", 
        RowBox[{"b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"\[Alpha]new", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", 
             RowBox[{
              RowBox[{
              "b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              RowBox[{
              "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
             ")"}], "/", 
           RowBox[{
           "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\[Alpha]new", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
         "<", 
        RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"\[Alpha]new", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", 
             RowBox[{
              RowBox[{
              "a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              RowBox[{
              "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
             ")"}], "/", 
           RowBox[{
           "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\[Alpha]new", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
         ">", 
        RowBox[{"b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        ",", 
       RowBox[{"\[Alpha]new", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"c", "-", 
             RowBox[{
              RowBox[{
              "b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              RowBox[{
              "y", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
             ")"}], "/", 
           RowBox[{
           "y", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
          RowBox[{
          "b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\[Alpha]new"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Index sets", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Compute index sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "0"], ",", "...", " ", ",", 
    SubscriptBox["I", "4"]}], TraditionalForm]]],
 " (note ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " indices differ from Keerthi's notation by +1 !)"
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyKronDelta", "[", 
   RowBox[{
    RowBox[{"a_", "?", "VectorQ"}], ",", 
    RowBox[{"b_", "?", "VectorQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "]"}], "&"}], ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetIndexSets", "[", 
   RowBox[{"\[Alpha]_List", ",", "a_List", ",", "b_List", ",", "y_List"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", 
   RowBox[{"Flatten", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"UnitStep", "[", 
            RowBox[{"a", "-", "\[Alpha]"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"UnitStep", "[", 
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"b", "-", "\[Alpha]"}], ")"}]}], "]"}]}], ")"}]}], ",", 
        "1"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MyKronDelta", "[", 
          RowBox[{"\[Alpha]", ",", "a"}], "]"}], "*", 
         RowBox[{"UnitStep", "[", "y", "]"}]}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MyKronDelta", "[", 
          RowBox[{"\[Alpha]", ",", "b"}], "]"}], "*", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"-", "y"}], "]"}]}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MyKronDelta", "[", 
          RowBox[{"\[Alpha]", ",", "b"}], "]"}], "*", 
         RowBox[{"UnitStep", "[", "y", "]"}]}], ",", "1"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MyKronDelta", "[", 
          RowBox[{"\[Alpha]", ",", "a"}], "]"}], "*", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"-", "y"}], "]"}]}], ",", "1"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "up"], "=", 
    RowBox[{
     SubscriptBox["I", "0"], "\[Union]", 
     SubscriptBox["I", "1"], "\[Union]", 
     SubscriptBox["I", "2"]}]}], TraditionalForm]]]
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpperBoundarySet", "[", "Isets_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Isets", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[Union]", 
   RowBox[{"Isets", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   "\[Union]", 
   RowBox[{
   "Isets", "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", "low"], "=", 
    RowBox[{
     SubscriptBox["I", "0"], "\[Union]", 
     SubscriptBox["I", "3"], "\[Union]", 
     SubscriptBox["I", "4"]}]}], TraditionalForm]]]
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"LowerBoundarySet", "[", "Isets_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Isets", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "\[Union]", 
   RowBox[{"Isets", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
   "\[Union]", 
   RowBox[{
   "Isets", "\[LeftDoubleBracket]", "5", 
    "\[RightDoubleBracket]"}]}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Violating pairs", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Violation pair condition",
 ", with tolerance parameter ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Tau]", ">", "0"}], TraditionalForm]]],
 " "
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ViolatingPairQ", "[", 
   RowBox[{
   "Iup_", ",", "Ilow_", ",", "i_", ",", "j_", ",", "F_List", ",", 
    "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"Iup", ",", "i"}], "]"}], "\[And]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"Ilow", ",", "j"}], "]"}], "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"F", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
        ">", "\[Tau]"}], ")"}]}], ")"}], "\[Or]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"Ilow", ",", "i"}], "]"}], "\[And]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"Iup", ",", "j"}], "]"}], "\[And]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
        "-", 
        RowBox[{"F", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
        ">", "\[Tau]"}], ")"}]}], ")"}]}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "Greedy selection of violating pair: \n1) take the one which maximizes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["F", "i"], "-", 
     SubscriptBox["F", "j"]}], "|"}], TraditionalForm]]],
 " on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "0"], TraditionalForm]]],
 ". (order of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", ",", "j"}], TraditionalForm]]],
 " is not important here)\n2) take any (i,j) that satisfies ViolatingPairQ"
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetViolatingPair", "[", 
   RowBox[{"I0_", ",", "Iup_", ",", "Ilow_", ",", "F_List", ",", "\[Tau]_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"o", ",", "i", ",", "j", ",", "l"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"F", "\[LeftDoubleBracket]", "I0", "\[RightDoubleBracket]"}],
          "]"}], "-", 
        RowBox[{"Min", "[", 
         RowBox[{"F", "\[LeftDoubleBracket]", "I0", "\[RightDoubleBracket]"}],
          "]"}]}], ">", "\[Tau]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"o", "=", 
        RowBox[{"Ordering", "[", 
         RowBox[{"F", "\[LeftDoubleBracket]", "I0", "\[RightDoubleBracket]"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"I0", "\[LeftDoubleBracket]", 
          RowBox[{"First", "[", "o", "]"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"I0", "\[LeftDoubleBracket]", 
          RowBox[{"Last", "[", "o", "]"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "else", " ", "no", " ", "violating", " ", "pair", " ", "on", " ", 
         "I0"}], ",", " ", 
        RowBox[{"scan", " ", "entire", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1.", ".."}], "l"}], "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ";", 
       RowBox[{"l", "=", 
        RowBox[{"Length", "[", "F", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"i", "\[LessEqual]", "l"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"j", "\[LessEqual]", "l"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ViolatingPairQ", "[", 
                RowBox[{
                "Iup", ",", "Ilow", ",", "i", ",", "j", ",", "F", ",", 
                 "\[Tau]"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"j", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"i", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "Null"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convergence test", "Subsection",
 InitializationCell->True],

Cell[TextData[{
 "Convergence test (eqn. 6), i.e., checking the KKT conditions at \[Alpha] \
(from which ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FormBox[
     RowBox[{"F", ",", " ", 
      SubscriptBox["I", "up"], ","}],
     TraditionalForm], 
    SubscriptBox["I", "low"]}], TraditionalForm]]],
 " is calculated)"
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"QPOptimalQ", "[", 
   RowBox[{"Iup_", ",", "Ilow_", ",", "F_List", ",", "\[Tau]_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"F", "\[LeftDoubleBracket]", "Ilow", "\[RightDoubleBracket]"}], 
     "]"}], "-", 
    RowBox[{"Min", "[", 
     RowBox[{"F", "\[LeftDoubleBracket]", "Iup", "\[RightDoubleBracket]"}], 
     "]"}]}], "\[LessEqual]", "\[Tau]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc utility functions", "Section"],

Cell["\<\
Useful for passing on unused options, e.g. to graphics functions. Returns a \
Sequence object of options not in the list r\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemainingOptions", "[", 
   RowBox[{"r_List", ",", "opts___"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Sequence", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"{", "opts", "}"}], ",", 
     RowBox[{"Apply", "[", 
      RowBox[{"Alternatives", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{"#", ",", "_"}], "]"}], "&"}], ",", "r"}], "]"}]}], 
      "]"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["End package", "Section",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{701, 902},
WindowMargins->{{Automatic, -10}, {-10, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> True}},
ShowSelection->True,
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 112, 5, 93, "Title",
 InitializationCell->True],
Cell[694, 29, 298, 8, 53, "Text",
 InitializationCell->True],
Cell[995, 39, 328, 6, 74, "Text",
 InitializationCell->True],
Cell[1326, 47, 132, 5, 54, "Text",
 InitializationCell->True],
Cell[1461, 54, 114, 2, 33, "Text"],
Cell[CellGroupData[{
Cell[1600, 60, 64, 1, 77, "Section",
 InitializationCell->True],
Cell[1667, 63, 92, 1, 32, "Text",
 InitializationCell->True],
Cell[1762, 66, 191, 4, 30, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1978, 74, 82, 1, 42, "Subsection",
 InitializationCell->True],
Cell[2063, 77, 5895, 125, 1573, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[7995, 207, 36, 0, 42, "Subsection"],
Cell[8034, 209, 510, 12, 145, "Input",
 InitializationCell->True],
Cell[8547, 223, 126, 3, 30, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8722, 232, 62, 1, 77, "Section",
 InitializationCell->True],
Cell[8787, 235, 783, 28, 57, "Text",
 InitializationCell->True],
Cell[9573, 265, 218, 6, 30, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[9816, 275, 64, 1, 42, "Subsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[9905, 280, 166, 5, 30, "Input",
 InitializationCell->True],
Cell[10074, 287, 173, 4, 30, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10296, 297, 59, 1, 42, "Subsection",
 InitializationCell->True],
Cell[10358, 300, 508, 15, 74, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[10891, 319, 363, 12, 30, "Input",
 InitializationCell->True],
Cell[11257, 333, 359, 11, 32, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11665, 350, 66, 1, 42, "Subsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11756, 355, 262, 8, 33, "Input",
 InitializationCell->True],
Cell[12021, 365, 243, 7, 33, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12325, 379, 62, 1, 77, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[12412, 384, 85, 1, 42, "Subsection",
 InitializationCell->True],
Cell[12500, 387, 512, 16, 50, "Input",
 InitializationCell->True],
Cell[13015, 405, 669, 19, 69, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13721, 429, 62, 1, 42, "Subsection",
 InitializationCell->True],
Cell[13786, 432, 687, 23, 95, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[14498, 459, 278, 8, 50, "Input",
 InitializationCell->True],
Cell[14779, 469, 269, 6, 30, "Output"]
}, Open  ]],
Cell[15063, 478, 1905, 48, 297, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[17005, 531, 67, 1, 42, "Subsection",
 InitializationCell->True],
Cell[17075, 534, 1060, 38, 97, "Text",
 InitializationCell->True],
Cell[18138, 574, 513, 18, 53, "Text"],
Cell[CellGroupData[{
Cell[18676, 596, 281, 8, 50, "Input",
 InitializationCell->True],
Cell[18960, 606, 269, 6, 30, "Output"]
}, Open  ]],
Cell[19244, 615, 1916, 48, 297, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[21197, 668, 36, 0, 42, "Subsection"],
Cell[21236, 670, 61, 1, 32, "Text",
 InitializationCell->True],
Cell[21300, 673, 1371, 49, 100, "Text",
 InitializationCell->True],
Cell[22674, 724, 454, 13, 74, "Text",
 InitializationCell->True],
Cell[23131, 739, 166, 3, 53, "Text"],
Cell[CellGroupData[{
Cell[23322, 746, 279, 8, 50, "Input",
 InitializationCell->True],
Cell[23604, 756, 271, 6, 30, "Output"]
}, Open  ]],
Cell[23890, 765, 2516, 68, 297, "Input",
 InitializationCell->True],
Cell[26409, 835, 455, 11, 50, "Input",
 InitializationCell->True],
Cell[26867, 848, 113, 3, 32, "Text"],
Cell[26983, 853, 1697, 47, 107, "Input",
 InitializationCell->True],
Cell[28683, 902, 440, 11, 50, "Input",
 InitializationCell->True],
Cell[29126, 915, 1568, 45, 107, "Input",
 InitializationCell->True],
Cell[30697, 962, 489, 11, 50, "Input",
 InitializationCell->True],
Cell[31189, 975, 225, 7, 53, "Text"],
Cell[31417, 984, 826, 25, 69, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32292, 1015, 38, 0, 77, "Section"],
Cell[CellGroupData[{
Cell[32355, 1019, 88, 1, 42, "Subsection",
 InitializationCell->True],
Cell[32446, 1022, 108, 3, 32, "Text"],
Cell[32557, 1027, 572, 18, 69, "Input",
 InitializationCell->True],
Cell[33132, 1047, 64, 0, 32, "Text"],
Cell[33199, 1049, 323, 9, 50, "Input",
 InitializationCell->True],
Cell[33525, 1060, 73, 0, 32, "Text"],
Cell[33601, 1062, 630, 17, 50, "Input",
 InitializationCell->True],
Cell[34234, 1081, 100, 2, 32, "Text"],
Cell[CellGroupData[{
Cell[34359, 1087, 192, 5, 30, "Input",
 InitializationCell->True],
Cell[34554, 1094, 203, 4, 30, "Output"]
}, Open  ]],
Cell[34772, 1101, 1791, 47, 126, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[36600, 1153, 67, 1, 42, "Subsection",
 InitializationCell->True],
Cell[36670, 1156, 1968, 63, 92, "Text",
 InitializationCell->True],
Cell[38641, 1221, 391, 13, 36, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39081, 1240, 64, 1, 77, "Section",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[39170, 1245, 40, 0, 42, "Subsection"],
Cell[39213, 1247, 1797, 61, 169, "Text",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[41035, 1312, 195, 5, 30, "Input",
 InitializationCell->True],
Cell[41233, 1319, 197, 4, 30, "Output"]
}, Open  ]],
Cell[41445, 1326, 4682, 115, 354, "Input",
 InitializationCell->True],
Cell[46130, 1443, 1055, 28, 107, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[47222, 1476, 36, 0, 42, "Subsection"],
Cell[CellGroupData[{
Cell[47283, 1480, 205, 5, 30, "Input",
 InitializationCell->True],
Cell[47491, 1487, 203, 4, 30, "Output"]
}, Open  ]],
Cell[47709, 1494, 3254, 83, 297, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51012, 1583, 55, 1, 77, "Section",
 InitializationCell->True],
Cell[51070, 1586, 76, 0, 32, "Text"],
Cell[51149, 1588, 1361, 45, 163, "Text"],
Cell[52513, 1635, 538, 16, 74, "Text"],
Cell[CellGroupData[{
Cell[53076, 1655, 69, 1, 42, "Subsection",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[53170, 1660, 183, 5, 30, "Input",
 InitializationCell->True],
Cell[53356, 1667, 187, 4, 30, "Output"]
}, Open  ]],
Cell[53558, 1674, 8367, 197, 677, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[61962, 1876, 72, 1, 42, "Subsection",
 InitializationCell->True],
Cell[62037, 1879, 354, 11, 53, "Text",
 InitializationCell->True],
Cell[62394, 1892, 2338, 66, 183, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[64769, 1963, 64, 1, 42, "Subsection",
 InitializationCell->True],
Cell[64836, 1966, 178, 5, 53, "Text",
 InitializationCell->True],
Cell[65017, 1973, 7078, 194, 268, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[72132, 2172, 59, 1, 42, "Subsection",
 InitializationCell->True],
Cell[72194, 2175, 330, 12, 32, "Text",
 InitializationCell->True],
Cell[72527, 2189, 618, 18, 50, "Input",
 InitializationCell->True],
Cell[73148, 2209, 1885, 53, 145, "Input",
 InitializationCell->True],
Cell[75036, 2264, 289, 11, 35, "Text",
 InitializationCell->True],
Cell[75328, 2277, 431, 12, 51, "Input",
 InitializationCell->True],
Cell[75762, 2291, 290, 11, 34, "Text",
 InitializationCell->True],
Cell[76055, 2304, 431, 12, 51, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[76523, 2321, 64, 1, 42, "Subsection",
 InitializationCell->True],
Cell[76590, 2324, 199, 8, 32, "Text",
 InitializationCell->True],
Cell[76792, 2334, 1163, 33, 69, "Input",
 InitializationCell->True],
Cell[77958, 2369, 527, 18, 77, "Text",
 InitializationCell->True],
Cell[78488, 2389, 2742, 68, 297, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[81267, 2462, 65, 1, 42, "Subsection",
 InitializationCell->True],
Cell[81335, 2465, 359, 13, 56, "Text",
 InitializationCell->True],
Cell[81697, 2480, 486, 13, 50, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82232, 2499, 41, 0, 77, "Section"],
Cell[82276, 2501, 146, 3, 53, "Text"],
Cell[82425, 2506, 546, 16, 69, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[83008, 2527, 57, 1, 77, "Section",
 InitializationCell->True],
Cell[83068, 2530, 96, 3, 30, "Input",
 InitializationCell->True],
Cell[83167, 2535, 103, 3, 30, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
