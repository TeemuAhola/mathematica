(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     32792,        686]
NotebookOptionsPosition[     30729,        644]
NotebookOutlinePosition[     31085,        660]
CellTagsIndexPosition[     31042,        657]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<ArduinoHelpers.wl\>\"", ",", " ", 
   RowBox[{"Path", "\[Rule]", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$UserDocumentsDirectory", ",", "\"\<Wolfram Mathematica\>\""}],
       "}"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.744374592737109*^9, 3.744374600978828*^9}, {
   3.744375436611864*^9, 3.744375437517984*^9}, {3.744375847603868*^9, 
   3.744375848528577*^9}, {3.744376199446064*^9, 3.74437620405551*^9}, {
   3.744376264583321*^9, 3.7443763159357862`*^9}, {3.744976711437646*^9, 
   3.74497673673936*^9}, {3.744976914204206*^9, 3.7449769162168407`*^9}, {
   3.744976950229856*^9, 3.744976951932823*^9}, {3.744976982198435*^9, 
   3.744977013304616*^9}, 3.744977093399849*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"19c251a7-3db2-4ff6-ad6e-9e12f05ada40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arduino", "=", 
  RowBox[{"OpenArduinoSerial", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.744375505357724*^9, 3.744375559719757*^9}, 
   3.74515333388797*^9, 3.745153411159988*^9, 3.745153470718082*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"1995ae02-e736-4518-991c-002ec0cb6999"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DeviceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 RGBColor[0.941, 0.961, 0.957], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
                25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
                0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
                1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {
                25.5, 24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, {
               RGBColor[0.7, 0.7, 0.7], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
                25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
                0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
                1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {
                25.5, 24.605}, {25.5, 23.5}, {25.5, 2.5}}}, 
                CurveClosed -> {1}]}, {
               FaceForm[{
                 RGBColor[0.5423, 0.63104, 0.63597], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
                18.727999999999998`}, {11.133, 18.451999999999998`}, {
                11.357000000000001`, 18.227999999999998`}, {11.633, 
                18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
                18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
                18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
                20.915}, {15.068, 21.139000000000003`}, {14.792, 
                21.139000000000003`}, {11.633, 21.139000000000003`}, {
                11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
                11.133, 20.639000000000003`}, {11.133, 
                18.727999999999998`}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
                14.113000000000001`, 9.554}, {12.357000000000001`, 
                9.554}}}]}, {
               FaceForm[{
                 RGBColor[0.624375, 0.695304, 0.691308], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 
                19.799}, {8.122, 11.516}, {10.573, 11.516}, {10.573, 
                11.493}, {11.982000000000001`, 9.171}, {14.539, 9.171}, {
                15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
                18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
                19.799}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
                9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
                7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 
                11.008}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
             PlotRange -> {{0., 26.}, {0., 26.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Serial\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                    Style[
                    Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False], 
                    Style[
                    Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, 
                    Devices`DeviceAPI`DeviceDump`status$$ = {
                    "Connected (/dev/ttyACM0)", 
                    "Not connected (/dev/ttyACM0)"}, 
                    Devices`DeviceAPI`DeviceDump`d$$ = 
                    DeviceObject[{"Serial", 1}], 
                    Devices`DeviceAPI`DeviceDump`ind$$ = 1, 
                    Devices`DeviceAPI`DeviceDump`indr$$ = 1}, 
                   DynamicBox[
                    ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                    Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm], 
                    ImageSizeCache -> {146., {5., 9.}}], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 RGBColor[0.941, 0.961, 0.957], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
                25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
                0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
                1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {
                25.5, 24.605}, {25.5, 23.5}, {25.5, 2.5}}}]}, {
               RGBColor[0.7, 0.7, 0.7], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.5, 2.5}, {
                25.5, 1.395}, {24.605, 0.5}, {23.5, 0.5}, {2.5, 0.5}, {1.395, 
                0.5}, {0.5, 1.395}, {0.5, 2.5}, {0.5, 23.5}, {0.5, 24.605}, {
                1.395, 25.5}, {2.5, 25.5}, {23.5, 25.5}, {24.605, 25.5}, {
                25.5, 24.605}, {25.5, 23.5}, {25.5, 2.5}}}, 
                CurveClosed -> {1}]}, {
               FaceForm[{
                 RGBColor[0.5423, 0.63104, 0.63597], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{11.133, 
                18.727999999999998`}, {11.133, 18.451999999999998`}, {
                11.357000000000001`, 18.227999999999998`}, {11.633, 
                18.227999999999998`}, {14.792, 18.227999999999998`}, {15.068, 
                18.227999999999998`}, {15.292, 18.451999999999998`}, {15.292, 
                18.727999999999998`}, {15.292, 20.639000000000003`}, {15.292, 
                20.915}, {15.068, 21.139000000000003`}, {14.792, 
                21.139000000000003`}, {11.633, 21.139000000000003`}, {
                11.357000000000001`, 21.139000000000003`}, {11.133, 20.915}, {
                11.133, 20.639000000000003`}, {11.133, 
                18.727999999999998`}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                12.357000000000001`, 1.}, {14.113000000000001`, 1.}, {
                14.113000000000001`, 9.554}, {12.357000000000001`, 
                9.554}}}]}, {
               FaceForm[{
                 RGBColor[0.624375, 0.695304, 0.691308], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}}}, {{{15.876000000000001`, 19.799}, {8.122, 
                19.799}, {8.122, 11.516}, {10.573, 11.516}, {10.573, 
                11.493}, {11.982000000000001`, 9.171}, {14.539, 9.171}, {
                15.876000000000001`, 11.493}, {15.876000000000001`, 11.516}, {
                18.326, 11.516}, {18.326, 19.799}, {15.876000000000001`, 
                19.799}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                8.806000000000001, 7.993}, {9.995000000000001, 7.993}, {
                9.995000000000001, 11.008}, {8.806000000000001, 11.008}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16.5, 
                7.993}, {17.689, 7.993}, {17.689, 11.008}, {16.5, 
                11.008}}}]}}, AspectRatio -> Automatic, 
             ImageSize -> {Automatic, 
               Dynamic[3.5 CurrentValue["FontCapHeight"]]}, 
             PlotRange -> {{0., 26.}, {0., 26.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Serial\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicModuleBox[{Devices`DeviceAPI`DeviceDump`lights$$ = {
                    Style[
                    Graphics[{{
                    RGBColor[0.88, 1, 0.88], 
                    Disk[{0, 0}]}, {
                    RGBColor[0, 0.85, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False], 
                    Style[
                    Graphics[{{
                    RGBColor[1, 1, 0], 
                    Disk[{0, 0}]}, {
                    RGBColor[0.8, 0.8, 0], 
                    Circle[{0, 0}]}}, PlotRange -> {-2.2, 1.1}, ImageSize -> 
                    9, ImageMargins -> {{3, 3}, {2, 0}}, 
                    BaseStyle -> {CacheGraphics -> False}], Selectable -> 
                    False]}, Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, 
                    Devices`DeviceAPI`DeviceDump`status$$ = {
                    "Connected (/dev/ttyACM0)", 
                    "Not connected (/dev/ttyACM0)"}, 
                    Devices`DeviceAPI`DeviceDump`d$$ = 
                    DeviceObject[{"Serial", 1}], 
                    Devices`DeviceAPI`DeviceDump`ind$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$}, 
                   DynamicBox[
                    ToBoxes[Devices`DeviceAPI`DeviceDump`ind$$ = If[
                    DeviceOpenQ[Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; 
                    Devices`DeviceAPI`DeviceDump`indr$$ = If[
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$], 1, 2]; Style[
                    Row[{
                    Part[
                    Devices`DeviceAPI`DeviceDump`lights$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`status$$, 
                    Devices`DeviceAPI`DeviceDump`ind$$]}], 
                    Part[
                    Devices`DeviceAPI`DeviceDump`opacities$$, 
                    Devices`DeviceAPI`DeviceDump`indr$$]], StandardForm]], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                
                DynamicModuleBox[{
                 Devices`DeviceAPI`DeviceDump`opacities$$ = {
                    Opacity[1], 
                    Opacity[0.2]}, Devices`DeviceAPI`DeviceDump`d$$ = 
                  DeviceObject[{"Serial", 1}], 
                  Devices`DeviceAPI`DeviceDump`props$$, 
                  Devices`DeviceAPI`DeviceDump`vals$$, 
                  Devices`DeviceAPI`DeviceDump`reg$$}, 
                 DynamicBox[
                  ToBoxes[
                  Devices`DeviceAPI`DeviceDump`reg$$ = 
                    DeviceFramework`DeviceRegisteredQ[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                   Devices`DeviceAPI`DeviceDump`props$$ = 
                    DeviceFramework`DeviceExternalProperties[
                    Devices`DeviceAPI`DeviceDump`d$$]; 
                   Devices`DeviceAPI`DeviceDump`vals$$ = 
                    Devices`DeviceAPI`DeviceDump`d$$[
                    Devices`DeviceAPI`DeviceDump`props$$]; Column[
                    Join[{
                    BoxForm`SummaryItem[{"Properties: ", 
                    If[
                    Or[
                    Not[Devices`DeviceAPI`DeviceDump`reg$$], 
                    Devices`DeviceAPI`DeviceDump`props$$ === {}], 
                    Style[None, 
                    Part[Devices`DeviceAPI`DeviceDump`opacities$$, 
                    If[Devices`DeviceAPI`DeviceDump`reg$$, 1, 2]]], ""]}]}, 
                    MapThread[BoxForm`SummaryItem[{
                    StringJoin["      ", 
                    ToString[#], ": "], #2}]& , {
                    Devices`DeviceAPI`DeviceDump`props$$, 
                    Devices`DeviceAPI`DeviceDump`vals$$}]]], StandardForm]], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DeviceObject[{"Serial", 1}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.745166549407434*^9, 3.745168335717993*^9, 
  3.745232179613591*^9, 3.7452356709536324`*^9, 3.745235800536159*^9, 
  3.745236420908684*^9, 3.7453223417540293`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"1cc5dc6e-fcc5-4ace-abfc-0d74b9b45f98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SynchronizeTime", "[", "arduino", "]"}]], "Input",
 CellChangeTimes->{{3.744382650788221*^9, 3.744382660228459*^9}, {
  3.744384633550671*^9, 3.7443846358285837`*^9}, {3.7443854169200687`*^9, 
  3.744385418743741*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4e20a08c-56c5-48f7-a434-511e97015b85"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.745166552113731*^9, 3.7451683380478067`*^9, 
  3.745232478158349*^9, 3.7452358030169697`*^9, 3.7452364321731367`*^9, 
  3.7453223435774603`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"bc90fc62-f88a-4857-9c3b-d02314fb4b0c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"temperature", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{"{", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readAndStoreTemperature", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "temp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"time", ",", "temp"}], "}"}], "=", 
       RowBox[{"ReadTemperatureNow", "[", "arduino", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"temperature", ",", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<time\>\"", "\[Rule]", "time"}], ",", 
          RowBox[{"\"\<temperature\>\"", "\[Rule]", "temp"}]}], "|>"}]}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.745235055227253*^9, 3.7452351660394087`*^9}, {
  3.745235270588833*^9, 3.7452352825353737`*^9}, {3.745235459000923*^9, 
  3.745235459338715*^9}, {3.745235590961514*^9, 3.745235593152297*^9}, {
  3.745235682063336*^9, 3.745235682436461*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"d62628d1-98ff-4db4-8128-ce5f4df92deb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temperatureTask", "=", 
   RowBox[{"SessionSubmit", "[", 
    RowBox[{"ScheduledTask", "[", 
     RowBox[{
      RowBox[{"readAndStoreTemperature", "[", "]"}], ",", 
      RowBox[{"10", 
       TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1],"\"min\"","minutes",
         "\"Minutes\""},
        "Quantity"]}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.744978130403984*^9, 3.744978137375511*^9}, {
   3.744993833760709*^9, 3.7449938748608418`*^9}, {3.744994029571418*^9, 
   3.7449940369636583`*^9}, {3.7452317764664993`*^9, 3.745231781651425*^9}, {
   3.7452319605256157`*^9, 3.745232067900921*^9}, {3.7452321328512907`*^9, 
   3.745232136460967*^9}, {3.7452351344516087`*^9, 3.745235136318198*^9}, {
   3.745235189747552*^9, 3.745235199454082*^9}, 3.745235532283977*^9, 
   3.745235587664421*^9, {3.7452359426628847`*^9, 3.745235966675528*^9}, {
   3.745236113860016*^9, 3.745236116396873*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"49e48371-5438-471e-bb50-410520e14360"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Update\>\"", ",", 
   RowBox[{"TaskExecute", "[", "temperatureTask", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745061556878996*^9, 3.7450615747908697`*^9}, {
  3.74516836169969*^9, 3.745168364439369*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3b1f29c8-10ad-41ae-b794-e0f5de0682a3"],

Cell[BoxData[
 ButtonBox["\<\"Update\"\>",
  Appearance->Automatic,
  ButtonFunction:>TaskExecute[$CellContext`temperatureTask],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.745236218223926*^9, 3.745236432405344*^9, 
  3.745322344178295*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"04bac6c1-b278-4cac-a7d5-814fe1745dbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"DateListPlot", "[", 
   RowBox[{"temperature", ",", 
    RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"20", ",", "40"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.745062011733326*^9, 3.745062012350233*^9}, {
   3.745062078268877*^9, 3.745062078862254*^9}, {3.745161183168709*^9, 
   3.7451612083464108`*^9}, {3.745161272617509*^9, 3.745161283070056*^9}, {
   3.745161345616485*^9, 3.745161377198278*^9}, 3.7452357504279346`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"f4dde71f-4b31-421b-8501-ba59ce5264a7"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   DateListPlot[$CellContext`temperature, PlotMarkers -> Automatic, 
    PlotRange -> {20, 40}, ImageSize -> Full], StandardForm],
  ImageSizeCache->{623., {196., 201.}}]], "Output",
 CellChangeTimes->{3.745236432813615*^9, 3.7453223448710117`*^9},
 CellLabel->"Out[8]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
gw8/wl3QQ5EeBmlCjdWskv8BjQOAig==\
\>"],ExpressionUUID->"053f7bf4-a1bb-47b4-b688-24e958344018"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "[", 
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$UserDocumentsDirectory", ",", 
       "\"\<arduino_temperature_trace.csv\>\""}], "}"}], "]"}], ",", 
    RowBox[{"temperature", "[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<time\>\"", "->", "DateString"}], ",", 
        RowBox[{"\"\<temperature\>\"", "->", "QuantityMagnitude"}]}], "}"}]}],
      "]"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"6b692440-d449-4381-8d87-a8fc1d0233b6"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Export[
    FileNameJoin[{$UserDocumentsDirectory, 
      "arduino_temperature_trace.csv"}], 
    $CellContext`temperature[
    All, {"time" -> DateString, "temperature" -> QuantityMagnitude}]], 
   StandardForm],
  ImageSizeCache->{384., {3., 10.}}]], "Output",
 CellChangeTimes->{3.7452419253347597`*^9, 3.745317385762979*^9, 
  3.745322345362289*^9, 3.745379109539269*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3ccab1c8-2301-4b3b-b8d6-c939d3c93e5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interrupt", "[", "]"}], ";"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"9b063832-35dc-4fa1-b20f-3bc18cc80607"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.74516657064533*^9, 3.7451683515416813`*^9, 
  3.745235806744446*^9, 3.74523643506479*^9, 3.745322347231526*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"7aadb636-36a1-4c1d-a6e6-cb4446d6947a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TaskRemove", "[", "temperatureTask", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.744994049496714*^9, 3.745060370854494*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"0564a3c2-018b-4c38-806c-05717b2d2533"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CloseArduinoSerial", "[", "arduino", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.744375883360485*^9, 3.74437589085443*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"7f2d7019-1eae-4c2c-bcf1-e629a3953109"]
},
WindowSize->{741, 868},
WindowMargins->{{Automatic, 30}, {Automatic, 50}},
CellContext->Notebook,
FrontEndVersion->"11.3 for Linux ARM (32-bit) (May 23, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 850, 15, 55, "Input",ExpressionUUID->"19c251a7-3db2-4ff6-ad6e-9e12f05ada40"],
Cell[CellGroupData[{
Cell[1433, 39, 307, 5, 31, "Input",ExpressionUUID->"1995ae02-e736-4518-991c-002ec0cb6999"],
Cell[1743, 46, 18726, 363, 68, "Output",ExpressionUUID->"1cc5dc6e-fcc5-4ace-abfc-0d74b9b45f98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20506, 414, 320, 5, 31, "Input",ExpressionUUID->"4e20a08c-56c5-48f7-a434-511e97015b85"],
Cell[20829, 421, 275, 4, 35, "Output",ExpressionUUID->"bc90fc62-f88a-4857-9c3b-d02314fb4b0c"]
}, Open  ]],
Cell[21119, 428, 1216, 29, 124, "Input",ExpressionUUID->"d62628d1-98ff-4db4-8128-ce5f4df92deb"],
Cell[22338, 459, 1040, 20, 58, "Input",ExpressionUUID->"49e48371-5438-471e-bb50-410520e14360"],
Cell[CellGroupData[{
Cell[23403, 483, 342, 6, 31, "Input",ExpressionUUID->"3b1f29c8-10ad-41ae-b794-e0f5de0682a3"],
Cell[23748, 491, 355, 8, 40, "Output",ExpressionUUID->"04bac6c1-b278-4cac-a7d5-814fe1745dbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24140, 504, 704, 13, 55, "Input",ExpressionUUID->"f4dde71f-4b31-421b-8501-ba59ce5264a7"],
Cell[24847, 519, 3805, 63, 414, 217, 4, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"053f7bf4-a1bb-47b4-b688-24e958344018"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28689, 587, 606, 16, 101, "Input",ExpressionUUID->"6b692440-d449-4381-8d87-a8fc1d0233b6"],
Cell[29298, 605, 492, 11, 35, "Output",ExpressionUUID->"3ccab1c8-2301-4b3b-b8d6-c939d3c93e5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29827, 621, 154, 3, 31, "Input",ExpressionUUID->"9b063832-35dc-4fa1-b20f-3bc18cc80607"],
Cell[29984, 626, 247, 3, 35, "Output",ExpressionUUID->"7aadb636-36a1-4c1d-a6e6-cb4446d6947a"]
}, Open  ]],
Cell[30246, 632, 238, 4, 31, "Input",ExpressionUUID->"0564a3c2-018b-4c38-806c-05717b2d2533"],
Cell[30487, 638, 238, 4, 31, "Input",ExpressionUUID->"7f2d7019-1eae-4c2c-bcf1-e629a3953109"]
}
]
*)

